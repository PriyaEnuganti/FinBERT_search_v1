
import pandas as pd

# Initialize empty 'Rank' and 'Relevancy' columns in df2
df2['Rank'] = ''
df2['Relevancy'] = ''

# Iterate through rows of df2
for index, row in df2.iterrows():
    query = row['query']
    url = row['url']

    # Find matching query in df1
    matching_query = df1[df1['query'] == query]

    # Check if a matching query was found
    if not matching_query.empty:
        # Assign 'Relevancy' from df1
        df2.at[index, 'Relevancy'] = matching_query['Relevancy'].values[0]

        # Check if 'Rank' is not NaN in df1
        if not pd.isna(matching_query['Rank'].values[0]):
            # Find all rows in df2 with the same query
            query_rows = df2[df2['query'] == query]

            # Iterate through the URL positions
            for i, query_row in query_rows.iterrows():
                if query_row['url'] == url:
                    df2.at[i, 'Rank'] = i - query_rows.index[0] + 1  # Assign Rank based on position
                    break

# Fill NaN values in the 'Rank' and 'Relevancy' columns with 'Blank'
df2['Rank'] = df2['Rank'].replace('', 'Blank')
df2['Relevancy'] = df2['Relevancy'].replace('', 'Blank')

# Now, df2 has 'Rank' and 'Relevancy' values based on your criteria.




import pandas as pd

# Merge dataframes based on 'query' to get Relevancy values
merged_df = df2.merge(df1[['query', 'Relevancy']], on='query', how='left')

# Function to find the matching URL positions and assign Rank
def assign_rank(row, df1):
    query = row['query']
    url = row['url']

    # Check if there's a Rank in df1 for this query
    rank_value = df1.loc[df1['query'] == query, 'Rank'].values

    if not pd.isna(rank_value):
        # Find all rows in df2 with the same query
        query_rows = df2[df2['query'] == query]

        # Iterate through the URL positions
        for index, query_row in query_rows.iterrows():
            if query_row['url'] == url:
                return index + 1  # Assign Rank based on position
    return rank_value  # If no URL match, use the Rank from df1

# Apply the function to create 'Rank' column in df2
merged_df['Rank'] = merged_df.apply(assign_rank, args=(df1,), axis=1)

# Fill NaN values in the 'Rank' and 'Relevancy' columns with 'Blank'
merged_df['Rank'] = merged_df['Rank'].fillna('Blank')
merged_df['Relevancy'] = merged_df['Relevancy'].fillna('Blank')

# Now, you have the updated dataframe in merged_df with 'Rank' and 'Relevancy' values.





import pandas as pd

# First, merge the dataframes on the 'query' column
merged_df = df2.merge(df1, on='query', how='left')

# Create a function to handle the rank and relevancy values
def get_rank_relevancy(row):
    query_rank = row['Rank_x']
    url = row['url_y']
    query_results = row['url_x']

    if pd.notna(query_rank):
        return query_rank, 'High'  # Set relevancy to 'High' if there's a match in the first dataframe
    elif url in query_results:
        return query_results.index(url) + 1, 'Medium'  # Set relevancy to 'Medium' if URL is found in the same position
    else:
        return None, None

# Apply the function to create new 'Rank' and 'Relevancy' columns
merged_df[['Rank', 'Relevancy']] = merged_df.apply(get_rank_relevancy, axis=1, result_type='expand')

# Drop unnecessary columns
merged_df = merged_df.drop(['Rank_x', 'url_x', 'url_y'], axis=1)

# Fill NaN values with 'Blank' for 'Rank' and 'Relevancy'
merged_df[['Rank', 'Relevancy']] = merged_df[['Rank', 'Relevancy']].fillna('Blank')

# Now, you have the updated dataframe in merged_df with 'Rank' and 'Relevancy' columns filled accordingly.

